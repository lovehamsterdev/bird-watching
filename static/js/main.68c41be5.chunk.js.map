{"version":3,"sources":["util.js","GameContext.js","components/common/Heading.jsx","components/common/Button.jsx","components/Ring.jsx","components/AccuracyRatio.jsx","components/GameResult.jsx","hooks/useTimeout.js","components/Block.jsx","components/common/FadeIn.jsx","components/Stage.jsx","hooks/useInterval.js","components/Timer.jsx","components/TimeUp.jsx","components/common/Img.jsx","assets/game_img.png","components/GameEntry.jsx","BirdWatchingGame.jsx","App.js","reportWebVitals.js","index.js"],"names":["randomIntArray","size","bound","Array","fill","map","toExclude","Math","floor","random","GameContext","createContext","useGame","useContext","config","GameProvider","children","useState","colors","setColors","correctColor","setCorrectColor","playing","setPlaying","time","setTime","correct","incorrect","result","setResult","firstTime","setFirstTime","newGameStage","array","count","reduce","acc","value","values","Object","keys","mostFrequent","findMostFrequent","recordResult","key","rs","newGame","onCorrect","endGame","onIncorrect","Provider","Heading","styled","div","props","color","Button","button","w","CircleStyled","circle","length","from","to","keyframes","strokeFillAnim","Ring","ratio","clockwise","R","c","PI","offset","cx","cy","r","AccuracyRatio","total","accuracy","correctRatio","incorrectRatio","width","height","x","y","textAnchor","fontSize","toFixed","GameResultStyled","ResultStyled","GameResult","show","setShow","cb","delay","ref","useRef","useEffect","current","setTimeout","clearTimeout","useTimeout","style","marginBottom","onClick","BlockStyled","bg","colorMap","0","1","2","Block","blockRef","target","anime","targets","duration","loop","opacity","easing","FadeIn","watch","StageStyled","Stage","useInterval","cbRef","it","setInterval","clearInterval","warningAnim","TimerStyled","warning","css","Timer","remain","setRemain","setWarning","rm","TimeUp","Img","img","GameEntryStyled","GameEntry","src","gameImg","BirdWatchingGame","AppStyled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68c41be5.chunk.js","sourcesContent":["export const randomInt = toExclude => {\n  return Math.floor(Math.random() * toExclude);\n};\n\nexport const randomIntArray = (size, bound) => {\n  return Array(size)\n    .fill(null)\n    .map(() => randomInt(bound));\n};\n\nexport const findMostFrequent = array => {\n  const count = array.reduce((acc, value) => ({ ...acc, [value]: (acc[value] ?? 0) + 1 }), {});\n  const values = Object.keys(count);\n  return values.reduce((mostFrequent, value) => (count[mostFrequent] < count[value] ? value : mostFrequent), values[0]);\n};\n","import { createContext, useContext, useState } from \"react\";\nimport { findMostFrequent, randomIntArray } from \"./util\";\n\nconst GameContext = createContext();\n\nexport function useGame() {\n  return useContext(GameContext);\n}\n\nconst config = {\n  numBlock: 16,\n  numColor: 3,\n  playTime: 10,\n};\n\nexport default function GameProvider({ children }) {\n  const [colors, setColors] = useState([]);\n  const [correctColor, setCorrectColor] = useState(-1);\n  const [playing, setPlaying] = useState(true);\n  const [time, setTime] = useState(config.playTime);\n  const [result, setResult] = useState({\n    correct: 0,\n    incorrect: 0,\n  });\n  const [firstTime, setFirstTime] = useState(true);\n\n  function newGameStage() {\n    const colors = randomIntArray(config.numBlock, config.numColor);\n    setColors(colors);\n    setCorrectColor(+findMostFrequent(colors));\n  }\n\n  function newGame() {\n    setPlaying(true);\n    setTime(config.playTime);\n    setResult({\n      correct: 0,\n      incorrect: 0,\n    });\n    setFirstTime(false);\n    newGameStage();\n  }\n\n  function endGame() {\n    setPlaying(false);\n    setTime(0);\n  }\n\n  function recordResult(key) {\n    setResult(rs => ({ ...rs, [key]: rs[key] + 1 }));\n  }\n\n  function onCorrect() {\n    recordResult(\"correct\");\n    newGameStage();\n  }\n\n  function onIncorrect() {\n    recordResult(\"incorrect\");\n  }\n\n  const value = {\n    colors,\n    correctColor,\n    newGame,\n    onCorrect,\n    playing,\n    time,\n    endGame,\n    result,\n    onIncorrect,\n    firstTime,\n  };\n\n  return <GameContext.Provider value={value}>{children}</GameContext.Provider>;\n}\n","import styled from \"styled-components\";\n\nconst Heading = styled.div`\n  font-size: ${props => (props.size === \"sm\" ? \"1.5em\" : \"3em\")};\n  color: ${props => props.color};\n`;\n\nexport default Heading;\n","import styled from \"styled-components\";\n\nconst Button = styled.button`\n  padding: 10px;\n  border-radius: 10px;\n  background-color: dodgerblue;\n  color: white;\n  font-size: 1.5em;\n  border: none;\n  width: ${props => (props.w ? props.w : \"100%\")};\n  cursor: pointer;\n`;\n\nexport default Button;\n","import styled, { keyframes } from \"styled-components\";\n\nconst strokeWidth = 20;\n\nconst strokeFillAnim = ({ from, to }) => keyframes`\n  from {\n    stroke-dashoffset: ${from};\n  }\n\n  to {\n    stroke-dashoffset: ${to};\n  }\n`;\n\nconst CircleStyled = styled.circle`\n  stroke: ${props => props.color};\n  fill: transparent;\n  stroke-width: ${strokeWidth}px;\n  stroke-dasharray: ${props => props.length};\n  stroke-dashoffset: ${props => props.length};\n  transition: all 1s;\n  transform: rotate(-90deg);\n  animation: ${props => strokeFillAnim(props)} 2s forwards;\n`;\n\nexport default function Ring({ color, size, ratio, clockwise }) {\n  const R = size / 2 - strokeWidth;\n  const c = 2 * R * Math.PI;\n  const sign = clockwise ? 1 : -1;\n  const offset = (1 - sign * ratio) * c;\n\n  return <CircleStyled from={c} to={offset} cx={-size / 2} cy={size / 2} r={R} length={c} color={color} />;\n}\n","import Ring from \"./Ring\";\n\nexport default function AccuracyRatio({ correct, incorrect }) {\n  const total = correct + incorrect;\n  const accuracy = (correct / (total || 1)) * 100;\n  const correctRatio = accuracy === 0 ? 0 : correct / total;\n  const incorrectRatio = 1 - correctRatio;\n\n  return (\n    <svg width=\"200\" height=\"200\">\n      <Ring color=\"dodgerblue\" size={200} ratio={correctRatio} clockwise={true} />\n      <Ring color=\"tomato\" size={200} ratio={incorrectRatio} clockwise={false} />\n      <text x=\"50%\" y=\"40%\" textAnchor=\"middle\" fontSize=\"1.5em\">\n        Accuracy\n      </text>\n      <text x=\"50%\" y=\"60%\" textAnchor=\"middle\" fontSize=\"1.5em\">\n        {accuracy && accuracy.toFixed(2)}%\n      </text>\n    </svg>\n  );\n}\n","import { useState } from \"react\";\nimport { useGame } from \"../GameContext\";\nimport Heading from \"./common/Heading\";\nimport useTimeout from \"../hooks/useTimeout\";\nimport styled from \"styled-components\";\nimport Button from \"./common/Button\";\nimport AccuracyRatio from \"./AccuracyRatio\";\n\nconst GameResultStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst ResultStyled = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 50px;\n`;\n\nexport default function GameResult() {\n  const { result, newGame } = useGame();\n  const [show, setShow] = useState(false);\n\n  useTimeout(() => {\n    setShow(true);\n  }, 1100);\n\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <GameResultStyled>\n      <Heading>🐧 Bird watching</Heading>\n      <ResultStyled>\n        <center>\n          <div style={{ color: \"tomato\", marginBottom: \"10px\" }}>Incorrect</div>\n          <Heading size=\"sm\">{result.incorrect}</Heading>\n        </center>\n        <AccuracyRatio correct={result.correct} incorrect={result.incorrect} />\n        <center>\n          <div style={{ color: \"dodgerblue\", marginBottom: \"10px\" }}>Correct</div>\n          <Heading size=\"sm\">{result.correct}</Heading>\n        </center>\n      </ResultStyled>\n      <Button onClick={newGame} w=\"300px\">\n        New game\n      </Button>\n    </GameResultStyled>\n  );\n}\n","import { useEffect, useRef } from \"react\";\n\nexport default function useTimeout(cb, delay = 0) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = cb;\n  }, [cb]);\n\n  useEffect(() => {\n    function tick() {\n      ref.current();\n    }\n    const to = setTimeout(tick, delay);\n    return () => clearTimeout(to);\n  }, [delay]);\n}\n","import anime from \"animejs\";\nimport { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useGame } from \"../GameContext\";\n\nconst BlockStyled = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  background-color: ${props => props.bg};\n`;\n\nconst colorMap = {\n  0: \"tomato\",\n  1: \"forestgreen\",\n  2: \"dodgerblue\",\n};\n\nfunction blinking(target) {\n  anime({\n    targets: target,\n    duration: 100,\n    loop: 2,\n    opacity: [0, 1],\n    easing: \"linear\",\n  });\n}\n\nexport default function Block({ color }) {\n  const { correctColor, onCorrect, onIncorrect } = useGame();\n  const blockRef = useRef();\n\n  function check() {\n    if (correctColor === color) {\n      onCorrect();\n    } else {\n      blinking(blockRef.current);\n      onIncorrect();\n    }\n  }\n  return <BlockStyled ref={blockRef} bg={colorMap[color]} onClick={check} />;\n}\n","import anime from \"animejs\";\nimport { useEffect, useRef } from \"react\";\n\nexport default function FadeIn({ watch = 0, children, duration = 100, delay = 0 }) {\n  const ref = useRef();\n\n  useEffect(() => {\n    anime({\n      targets: ref.current,\n      opacity: [0, 1],\n      easing: \"linear\",\n      duration,\n      delay,\n    });\n  }, [watch, duration, delay]);\n\n  return (\n    <div style={{ opacity: 0 }} ref={ref}>\n      {children}\n    </div>\n  );\n}\n","import styled from \"styled-components\";\nimport { useGame } from \"../GameContext\";\nimport Block from \"./Block\";\nimport FadeIn from \"./common/FadeIn\";\n\nconst StageStyled = styled.div`\n  user-select: none;\n  border: 1px dashed dodgerblue;\n  padding: 20px;\n  display: grid;\n  grid-template-columns: auto auto auto auto; // 4x4\n  gap: 15px;\n  width: 600px;\n  height: 600px;\n\n  @media (max-width: 500px) {\n    width: 300px;\n    height: 300px;\n    gap: 10px;\n  }\n`;\n\nexport default function Stage() {\n  const { colors } = useGame();\n\n  return (\n    <FadeIn duration={50} watch={colors}>\n      <StageStyled>\n        {colors.map(color => (\n          <Block color={color} />\n        ))}\n      </StageStyled>\n    </FadeIn>\n  );\n}\n","import { useEffect, useRef } from \"react\";\n\nexport default function useInterval(cb, delay = 1000) {\n  const cbRef = useRef();\n\n  useEffect(() => {\n    cbRef.current = cb;\n  }, [cb]);\n\n  useEffect(() => {\n    function tick() {\n      cbRef.current();\n    }\n    const it = setInterval(tick, delay);\n    return () => clearInterval(it);\n  }, [delay]);\n}\n","import { useEffect, useState } from \"react\";\nimport { useGame } from \"../GameContext\";\nimport useInterval from \"../hooks/useInterval\";\nimport styled, { css, keyframes } from \"styled-components\";\n\nconst warningAnim = keyframes`\n  50% {\n    box-shadow: 0 0 50px 20px tomato;\n  }\n`;\n\nconst TimerStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 0;\n  ${props =>\n    props.warning &&\n    css`\n      animation: ${warningAnim} 1s linear 5;\n    `}\n`;\nexport default function Timer() {\n  const { time, endGame } = useGame();\n  const [remain, setRemain] = useState(time);\n  const [warning, setWarning] = useState(false);\n\n  useInterval(() => {\n    setRemain(rm => rm - 1);\n  }, 1000);\n\n  useEffect(() => {\n    if (remain <= 0) {\n      endGame();\n      return;\n    }\n\n    if (remain <= 5) {\n      setWarning(true);\n    }\n  }, [remain, endGame]);\n\n  return <TimerStyled warning={warning} />;\n}\n","import anime from \"animejs\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Heading from \"./common/Heading\";\nimport useTimeout from \"../hooks/useInterval\";\n\nexport default function TimeUp() {\n  const ref = useRef();\n  const [show, setShow] = useState(true);\n\n  useTimeout(() => {\n    setShow(false);\n  }, 1000);\n\n  useEffect(() => {\n    anime({\n      targets: ref.current,\n      fontSize: [\"3em\", \"4em\"],\n    });\n  }, []);\n\n  return show && <Heading ref={ref}>Time's Up</Heading>;\n}\n","import styled from \"styled-components\";\n\nconst Img = styled.img`\n  width: 600px;\n  margin: 10px;\n  transition: width 0.2s;\n  @media (max-width: 500px) {\n    width: 300px;\n  }\n`;\n\nexport default Img;\n","export default __webpack_public_path__ + \"static/media/game_img.f75ccced.png\";","import styled from \"styled-components\";\nimport Heading from \"./common/Heading\";\nimport Img from \"./common/Img\";\nimport gameImg from \"../assets/game_img.png\";\nimport Button from \"./common/Button\";\nimport { useGame } from \"../GameContext\";\n\nconst GameEntryStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n`;\nexport default function GameEntry() {\n  const { newGame } = useGame();\n\n  return (\n    <GameEntryStyled>\n      <Heading color=\"white\">How to play</Heading>\n      <Img src={gameImg} />\n      <p style={{ color: \"white\" }}>Select the color that appears the most</p>\n      <Button onClick={newGame} w=\"300px\">\n        New game\n      </Button>\n    </GameEntryStyled>\n  );\n}\n","import GameResult from \"./components/GameResult\";\nimport Stage from \"./components/Stage\";\nimport Timer from \"./components/Timer\";\nimport TimeUp from \"./components/TimeUp\";\nimport { useGame } from \"./GameContext\";\nimport GameEntry from \"./components/GameEntry\";\n\nexport default function BirdWatchingGame() {\n  const { playing, firstTime } = useGame();\n\n  if (firstTime) {\n    return <GameEntry />;\n  }\n\n  if (!playing) {\n    return (\n      <div>\n        <TimeUp />\n        <GameResult />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Timer />\n      <Stage />\n    </div>\n  );\n}\n","import styled from \"styled-components\";\nimport BirdWatchingGame from \"./BirdWatchingGame\";\nimport GameProvider from \"./GameContext\";\n\nconst AppStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nfunction App() {\n  return (\n    <AppStyled>\n      <GameProvider>\n        <BirdWatchingGame />\n      </GameProvider>\n    </AppStyled>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}